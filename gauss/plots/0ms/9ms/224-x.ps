%!PS-Adobe-2.0
%%Title: plots/0ms/9ms/224-x.ps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Thu Oct  1 16:21:46 2015
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 482
%%Orientation: Portrait
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (plots/0ms/9ms/224-x.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Joe Heffer)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Thu Oct  1 16:21:46 2015)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
0 setgray
newpath
(CM Roman, Times New Roman, Serif) findfont 160 scalefont setfont
1.000 UL
LTb
1072 512 M
63 0 V
3665 0 R
-63 0 V
stroke
976 512 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 1100)]
] -53.3 MRshow
1.000 UL
LTb
1072 845 M
63 0 V
3665 0 R
-63 0 V
stroke
976 845 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 1200)]
] -53.3 MRshow
1.000 UL
LTb
1072 1178 M
63 0 V
3665 0 R
-63 0 V
stroke
976 1178 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 1300)]
] -53.3 MRshow
1.000 UL
LTb
1072 1510 M
63 0 V
3665 0 R
-63 0 V
stroke
976 1510 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 1400)]
] -53.3 MRshow
1.000 UL
LTb
1072 1843 M
63 0 V
3665 0 R
-63 0 V
stroke
976 1843 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 1500)]
] -53.3 MRshow
1.000 UL
LTb
1072 2176 M
63 0 V
3665 0 R
-63 0 V
stroke
976 2176 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 1600)]
] -53.3 MRshow
1.000 UL
LTb
1072 2509 M
63 0 V
3665 0 R
-63 0 V
stroke
976 2509 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 1700)]
] -53.3 MRshow
1.000 UL
LTb
1072 2842 M
63 0 V
3665 0 R
-63 0 V
stroke
976 2842 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 1800)]
] -53.3 MRshow
1.000 UL
LTb
1072 3174 M
63 0 V
3665 0 R
-63 0 V
stroke
976 3174 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 1900)]
] -53.3 MRshow
1.000 UL
LTb
1072 3507 M
63 0 V
3665 0 R
-63 0 V
stroke
976 3507 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 2000)]
] -53.3 MRshow
1.000 UL
LTb
1072 3840 M
63 0 V
3665 0 R
-63 0 V
stroke
976 3840 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 2100)]
] -53.3 MRshow
1.000 UL
LTb
1072 512 M
0 63 V
0 3265 R
0 -63 V
stroke
1072 352 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1693 512 M
0 63 V
0 3265 R
0 -63 V
stroke
1693 352 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 20)]
] -53.3 MCshow
1.000 UL
LTb
2315 512 M
0 63 V
0 3265 R
0 -63 V
stroke
2315 352 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 40)]
] -53.3 MCshow
1.000 UL
LTb
2936 512 M
0 63 V
0 3265 R
0 -63 V
stroke
2936 352 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 60)]
] -53.3 MCshow
1.000 UL
LTb
3557 512 M
0 63 V
0 3265 R
0 -63 V
stroke
3557 352 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 80)]
] -53.3 MCshow
1.000 UL
LTb
4179 512 M
0 63 V
0 3265 R
0 -63 V
stroke
4179 352 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 100)]
] -53.3 MCshow
1.000 UL
LTb
4800 512 M
0 63 V
0 3265 R
0 -63 V
stroke
4800 352 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( 120)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
1072 3840 N
0 -3328 V
3728 0 V
0 3328 V
-3728 0 V
Z stroke
LCb setrgbcolor
320 2176 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 (Brightness)]
] -53.3 MCshow
grestore
LTb
LCb setrgbcolor
2936 112 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 (Pixel)]
] -53.3 MCshow
LTb
2936 4080 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 (t)]
[(CM Roman, Times New Roman, Serif) 128.0 -48.0 true true 0 (mol)]
[(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( = 0 ms, t)]
[(CM Roman, Times New Roman, Serif) 128.0 -48.0 true true 0 (wait)]
[(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( = 9 ms, frame 224 x-axis)]
] -37.3 MCshow
1.000 UP
1.000 UL
LTb
0.400 UP
1.000 UL
LT0
1072 1111 CircleF
1103 1307 CircleF
1134 1267 CircleF
1165 1108 CircleF
1196 1144 CircleF
1227 1184 CircleF
1258 1287 CircleF
1289 1054 CircleF
1321 1347 CircleF
1352 1261 CircleF
1383 1441 CircleF
1414 1204 CircleF
1445 1297 CircleF
1476 1161 CircleF
1507 1327 CircleF
1538 1317 CircleF
1569 1324 CircleF
1600 1171 CircleF
1631 1294 CircleF
1662 1094 CircleF
1693 1068 CircleF
1724 1098 CircleF
1755 1204 CircleF
1787 968 CircleF
1818 1051 CircleF
1849 1041 CircleF
1880 1297 CircleF
1911 1124 CircleF
1942 1098 CircleF
1973 1068 CircleF
2004 1317 CircleF
2035 1118 CircleF
2066 1088 CircleF
2097 1124 CircleF
2128 1048 CircleF
2159 742 CircleF
2190 1198 CircleF
2221 968 CircleF
2253 1191 CircleF
2284 1084 CircleF
2315 1141 CircleF
2346 1078 CircleF
2377 1158 CircleF
2408 905 CircleF
2439 1058 CircleF
2470 1044 CircleF
2501 1221 CircleF
2532 1001 CircleF
2563 908 CircleF
2594 1091 CircleF
2625 1284 CircleF
2656 1327 CircleF
2687 1311 CircleF
2719 1287 CircleF
2750 1407 CircleF
2781 1421 CircleF
2812 1780 CircleF
2843 1713 CircleF
2874 2129 CircleF
2905 2223 CircleF
2936 2662 CircleF
2967 2659 CircleF
2998 3121 CircleF
3029 3414 CircleF
3060 3570 CircleF
3091 3254 CircleF
3122 3038 CircleF
3153 2725 CircleF
3185 2282 CircleF
3216 1654 CircleF
3247 1677 CircleF
3278 1181 CircleF
3309 1364 CircleF
3340 1208 CircleF
3371 1267 CircleF
3402 1134 CircleF
3433 1111 CircleF
3464 1178 CircleF
3495 1051 CircleF
3526 1064 CircleF
3557 935 CircleF
3588 1001 CircleF
3619 1164 CircleF
3651 988 CircleF
3682 1238 CircleF
3713 1054 CircleF
3744 1174 CircleF
3775 845 CircleF
3806 1144 CircleF
3837 848 CircleF
3868 951 CircleF
3899 985 CircleF
3930 1074 CircleF
3961 1297 CircleF
3992 1188 CircleF
4023 941 CircleF
4054 1071 CircleF
4085 895 CircleF
4117 1158 CircleF
4148 1141 CircleF
4179 1188 CircleF
4210 988 CircleF
4241 1174 CircleF
4272 1174 CircleF
4303 1178 CircleF
4334 981 CircleF
4365 1214 CircleF
4396 878 CircleF
4427 1224 CircleF
4458 851 CircleF
4489 1158 CircleF
4520 1061 CircleF
4551 1061 CircleF
4583 1018 CircleF
4614 1005 CircleF
4645 971 CircleF
4676 1128 CircleF
4707 1044 CircleF
4738 1114 CircleF
4769 921 CircleF
1.000 UL
LT1
LTb
4065 3697 M
[ [(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 (I)]
[(CM Roman, Times New Roman, Serif) 128.0 -48.0 true true 0 (0)]
[(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 (exp\( -\(\(x-x)]
[(CM Roman, Times New Roman, Serif) 128.0 -48.0 true true 0 (0)]
[(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 (\))]
[(CM Roman, Times New Roman, Serif) 128.0 80.0 true true 0 (2)]
[(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 (\)/\(2)]
[(Symbol) 160.0 0.0 true true 0 (s)]
[(CM Roman, Times New Roman, Serif) 128.0 80.0 true true 0 (2)]
[(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 (\) \) + B)]
[(CM Roman, Times New Roman, Serif) 128.0 -48.0 true true 0 (a)]
[(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 ( + B)]
[(CM Roman, Times New Roman, Serif) 128.0 -48.0 true true 0 (b)]
[(CM Roman, Times New Roman, Serif) 160.0 0.0 true true 0 (x)]
] -53.3 MRshow
LT1
4161 3697 M
447 0 V
1072 1115 M
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 1 V
37 2 V
37 7 V
38 16 V
37 37 V
37 73 V
38 132 V
37 213 V
37 305 V
38 385 V
37 417 V
37 373 V
38 245 V
37 55 V
38 -151 V
37 -317 V
37 -405 V
38 -410 V
37 -350 V
37 -261 V
38 -171 V
37 -101 V
37 -53 V
38 -25 V
37 -11 V
37 -4 V
38 -2 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
stroke
LT2
1072 1115 M
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
37 0 V
38 0 V
37 0 V
stroke
LTb
1072 3840 N
0 -3328 V
3728 0 V
0 3328 V
-3728 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Symbol CM Roman, Times New Roman, Serif
%%Pages: 1
